require 'pinto_beans'

port = nil
dir = nil

factory = PintoBeans::Factory.new

opt_parser = factory.opt_parser
opt_parser.banner =  "Usage:\n"
opt_parser.banner << "     pinto_server start [options]    Start server with forking\n"
opt_parser.banner << "     pinto_server run [options]      Start server without forking\n"
opt_parser.banner << "     pinto_server stop               Stop server\n"
opt_parser.separator('Options:')
opt_parser.on('-p', '--port PORT', Integer, 'Server port') do |p|
  port = p
end
opt_parser.on('-d', '--dir DIR', String, 'Application directory') do |d|
  unless factory.filetest.directory?(d)
    puts "directory doesn't exist"
    exit
  end
  dir = d
end

command = ARGV.shift
unless command == 'start' || command == 'run' || command == 'stop'
  puts opt_parser
  exit
end

begin
  opt_parser.parse(ARGV)
rescue
  puts opt_parser
  exit
end

if (command == 'start' || command == 'run') && (port.nil? || dir.nil?)
  puts opt_parser
  exit
end

file = factory.file
pinto_dir = file.dirname(file.dirname(file.expand_path(__FILE__)))

daemon_options = {
  :ARGV      => [command],
  :dir_mode  => :normal,
  :dir       => file.join(pinto_dir, 'run'),
  :multiple  => true,
  :log_ouput => false 
}
factory.daemons.run_proc('proc', daemon_options) do
  factory.web_server(port, dir).run
end
